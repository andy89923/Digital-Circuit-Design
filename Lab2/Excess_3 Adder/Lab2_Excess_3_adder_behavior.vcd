$date
	Mon May 25 12:44:11 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_Lab2_Excess_3_adder_behavior $end
$var wire 4 ! Sum [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$scope module M $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 ( tmp [3:0] $end
$var wire 1 " Cout $end
$var reg 4 ) Sum [3:0] $end
$var reg 1 * t $end
$scope module M $end
$var wire 4 + A [3:0] $end
$var wire 4 , B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 - P [3:0] $end
$var wire 4 . G [3:0] $end
$var wire 4 / C [4:1] $end
$var reg 1 " Cout $end
$var reg 4 0 Sum [3:0] $end
$scope module M $end
$var wire 1 % C0 $end
$var wire 4 1 G [3:0] $end
$var wire 4 2 P [3:0] $end
$var reg 4 3 C [4:1] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 3
b0 2
b11 1
b110 0
b11 /
b11 .
b0 -
b11 ,
b11 +
1*
b11 )
b110 (
b11 '
b11 &
0%
b11 $
b11 #
0"
b11 !
$end
#50
b100 !
b100 )
b111 (
b111 0
1%
#100
b0 /
b0 3
b1100 !
b1100 )
b0 .
b0 1
b1111 -
b1111 2
b1111 (
b1111 0
0%
b111 $
b111 '
b111 ,
b1000 #
b1000 &
b1000 +
#150
1"
b11 !
b11 )
b1111 /
b1111 3
b0 (
b0 0
1%
#200
1"
b1011 !
b1011 )
b0 -
b0 2
b1100 .
b1100 1
b1100 /
b1100 3
b1000 (
b1000 0
0%
b1100 $
b1100 '
b1100 ,
b1100 #
b1100 &
b1100 +
#250
b1100 !
b1100 )
b1001 (
b1001 0
1%
#300
